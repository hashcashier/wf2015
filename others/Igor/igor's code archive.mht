From: <Saved by Microsoft Internet Explorer 5>
Subject: igor's code archive
Date: Fri, 25 Nov 2005 14:53:36 -0700
MIME-Version: 1.0
Content-Type: text/html;
	charset="Windows-1252"
Content-Transfer-Encoding: quoted-printable
Content-Location: http://shygypsy.com/tools/
X-MimeOLE: Produced By Microsoft MimeOLE V6.00.2800.1506

<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0 Transitional//EN">
<HTML><HEAD><TITLE>igor's code archive</TITLE>
<META http-equiv=3DContent-Type content=3D"text/html; =
charset=3Dwindows-1252">
<STYLE></STYLE>

<META content=3D"MSHTML 6.00.2800.1522" name=3DGENERATOR></HEAD>
<BODY bgColor=3D#cccccc>
<SCRIPT language=3Djavascript>=0A=
// Define the contents of the library=0A=
=0A=
var files =3D new Array=0A=
(=0A=
    "BigInt.cpp",=0A=
    "Complex.cpp",=0A=
    "bst.cpp",=0A=
    "Die.cpp",=0A=
    "Matrix.cpp",=0A=
    "Rational.cpp",=0A=
    "dijkstra.cpp",=0A=
    "bpm.cpp",=0A=
    "flow.cpp",=0A=
    "mcmf3.cpp",=0A=
    "mcmf4.cpp",=0A=
    "geometry.cpp",=0A=
    "lsits.cpp",=0A=
    "library.cpp",=0A=
    "number.cpp",=0A=
    "pairsums.cpp"=0A=
);=0A=
=0A=
var descr =3D new Array=0A=
(=0A=
    "Arbitrary precision arithmetic.",=0A=
    "Complex numbers.",=0A=
    "Balanced binary search tree (AVL tree)",=0A=
    "Rolling 6-sided die simulation.",=0A=
    "Matrix algebra.",=0A=
    "Rational numbers in reduced form.",=0A=
    "Graphs: Shortest path (Dijkstra's).",=0A=
    "Graphs: Bipartite matching.",=0A=
    "Graphs: Maximum flow (minimum cut).",=0A=
    "Graphs: Minimum cost maximum flow (v. 3.0).",=0A=
    "Graphs: Minimum cost maximum flow (v. 4.0).",=0A=
    "Geometric routines.",=0A=
    "Line segment intersection.",=0A=
    "Miscellaneous routines.",=0A=
    "Number theoretic algorithms.",=0A=
    "Reconstructing a set of integers from the set of their pairwise =
sums."=0A=
);=0A=
=0A=
var funcs =3D new Array=0A=
(=0A=
    // BigInt.cpp=0A=
    new Array=0A=
    (=0A=
        "+, -, *, /, %",=0A=
        "&lt;, &gt;, =3D=3D, &lt;=3D, &gt;=3D, !=3D",=0A=
        "!, bool, int, string",=0A=
        ",",=0A=
        "log2(), log10(), etc."=0A=
    ),=0A=
    =0A=
    // Complex.cpp=0A=
    new Array=0A=
    (=0A=
        "+, -, *, /"=0A=
    ),=0A=
    =0A=
    // bst.cpp=0A=
    new Array=0A=
    (=0A=
        "insert()",=0A=
        "count(), find()",=0A=
        "count( a, b )"=0A=
    ),=0A=
=0A=
    // Die.cpp=0A=
    new Array=0A=
    (=0A=
        0=0A=
    ),=0A=
    =0A=
    // Matrix.cpp=0A=
    new Array=0A=
    (=0A=
        "+, -, *",=0A=
        "lu()",=0A=
        "det()"=0A=
    ),=0A=
    =0A=
    // Rational.cpp=0A=
    new Array=0A=
    (=0A=
        "+, -, *, /",=0A=
        "&lt;, &gt;, =3D=3D, &lt;=3D, &gt;=3D, !=3D"=0A=
    ),=0A=
=0A=
    // dijkstra.cpp=0A=
    new Array=0A=
    (=0A=
        0=0A=
    ),=0A=
    =0A=
    // bpm.cpp=0A=
    new Array=0A=
    (=0A=
        0=0A=
    ),=0A=
    =0A=
    // flow.cpp=0A=
    new Array=0A=
    (=0A=
        0=0A=
    ),=0A=
    =0A=
    // mcmf3.cpp=0A=
    new Array=0A=
    (=0A=
        0=0A=
    ),=0A=
    =0A=
    // mcmf4.cpp=0A=
    new Array=0A=
    (=0A=
        0=0A=
    ),=0A=
    =0A=
    // geometry.cpp=0A=
    new Array=0A=
    (=0A=
        "struct P",=0A=
        "struct L",=0A=
        "leftTurn()",=0A=
        "pointInsideTriangle()",=0A=
        "polarAngle()",=0A=
        "pointInPoly()",=0A=
        "distToLine()",=0A=
        "distToLineSegment()",=0A=
        "lineIntersect()",=0A=
        "lineSegIntersect()",=0A=
        "circle3pts()",=0A=
        "circle2ptsRad()",=0A=
        "cutPoly()"=0A=
    ),=0A=
=0A=
    // lsits.cpp=0A=
    new Array=0A=
    (=0A=
        0=0A=
    ),=0A=
    =0A=
    // library.cpp=0A=
    new Array=0A=
    (=0A=
        "foreach",=0A=
        "printPoly()",=0A=
        "maximumSum()",=0A=
        "readn()",=0A=
        "lis()",=0A=
        "lexKSubsets()",=0A=
        "toRoman()",=0A=
        "milkJudge()"=0A=
    ),=0A=
    =0A=
    // number.cpp=0A=
    new Array=0A=
    (=0A=
        "gcd()",=0A=
        "egcd()",=0A=
        "msolve()",=0A=
        "ldioph()",=0A=
        "inverse()",=0A=
        "powmod()",=0A=
        "horner()",=0A=
        "sieve()",=0A=
        "isPrime()",=0A=
        "factor()",=0A=
        "phi()",=0A=
        "divisors()",=0A=
        "contFract()"=0A=
    ),=0A=
    =0A=
    // pairsums.cpp=0A=
    new Array=0A=
    (=0A=
        0=0A=
    )=0A=
);=0A=
=0A=
var funcDescr =3D new Array=0A=
(=0A=
    // BigInt.cpp=0A=
    new Array=0A=
    (=0A=
        "Arithmetic",=0A=
        "Comparison",=0A=
        "Casting",=0A=
        "Base 10 concatenation.",=0A=
        "Logarithms"=0A=
    ),=0A=
    =0A=
    // Complex.cpp=0A=
    new Array=0A=
    (=0A=
        "Arithmetic"=0A=
    ),=0A=
    =0A=
    // bst.cpp=0A=
    new Array=0A=
    (=0A=
        "Add an element",=0A=
        "Locate an element",=0A=
        "Count the number of elements in the range [a, b)"=0A=
    ),=0A=
    =0A=
    // Die.cpp=0A=
    new Array=0A=
    (=0A=
        0=0A=
    ),=0A=
    =0A=
    // Matrix.cpp=0A=
    new Array=0A=
    (=0A=
        "Arithmetic",=0A=
        "(P)LU-decomposition",=0A=
        "Determinant"=0A=
    ),=0A=
    =0A=
    // Rational.cpp=0A=
    new Array=0A=
    (=0A=
        "Arithmetic",=0A=
        "Comparison"=0A=
    ),=0A=
    =0A=
    // dijkstra.cpp=0A=
    new Array=0A=
    (=0A=
        0=0A=
    ),=0A=
    =0A=
    // bpm.cpp=0A=
    new Array=0A=
    (=0A=
        0=0A=
    ),=0A=
    =0A=
    // flow.cpp=0A=
    new Array=0A=
    (=0A=
        0=0A=
    ),=0A=
    =0A=
    // mcmf3.cpp=0A=
    new Array=0A=
    (=0A=
        0=0A=
    ),=0A=
    =0A=
    // mcmf4.cpp=0A=
    new Array=0A=
    (=0A=
        0=0A=
    ),=0A=
    =0A=
    // geometry.cpp=0A=
    new Array=0A=
    (=0A=
        "point",=0A=
        "canonical line with integer parameters",=0A=
        "left turn",=0A=
        "point inside triangle",=0A=
        "polar angle",=0A=
        "point inside polygon",=0A=
        "distance from a point to a line",=0A=
        "distance from a point to a line segment",=0A=
        "line intersection",=0A=
        "line segment intersection",=0A=
        "circle through 3 points",=0A=
        "circle of a given radius through 2 points",=0A=
        "cut a convex polygon by a half-plane"=0A=
    ),=0A=
    =0A=
    // lsits.cpp=0A=
    new Array=0A=
    (=0A=
        0=0A=
    ),=0A=
=0A=
    // library.cpp=0A=
    new Array=0A=
    (=0A=
        "A handy macro for iterating through STL collections",=0A=
        "Print a Polynomial",=0A=
        "Maximum sub-array sum",=0A=
        "Fast integer input",=0A=
        "Longest increasing subsequence",=0A=
        "Print k-subsets in lexicographic order",=0A=
        "Convert to a Roman numeral",=0A=
        "Get information from judge (Valladolid)"=0A=
    ),=0A=
    =0A=
    // number.cpp=0A=
    new Array=0A=
    (=0A=
        "GCD (Euclidean algorithm)",=0A=
        "extended GCD",=0A=
        "modular linear equation solver",=0A=
        "linear Diophantine equation solver",=0A=
        "modular inverse",=0A=
        "successive squaring (modular powers)",=0A=
        "Horner's rule polynomial evaluation",=0A=
        "sieve of Erastosthenes",=0A=
        "simple primality testing algorithm",=0A=
        "simple factoring algorithm",=0A=
        "Euler phi (totient) function",=0A=
        "number of divisors",=0A=
        "continued fractions of rationals"=0A=
    ),=0A=
    =0A=
    // pairsums.cpp=0A=
    new Array=0A=
    (=0A=
        0=0A=
    )=0A=
);=0A=
</SCRIPT>

<CENTER>
<TABLE width=3D640 border=3D0>
  <TBODY>
  <TR>
    <TD>
      <TABLE cellSpacing=3D0 cellPadding=3D0 width=3D640 =
bgColor=3D#001b36 border=3D0>
        <TBODY>
        <TR height=3D1>
          <TD bgColor=3D#001b36></TD></TR>
        <TR>
          <TD width=3D5 bgColor=3D#001b36></TD>
          <TD vAlign=3Dtop bgColor=3D#001b36><FONT color=3D#ffffff =
size=3D5>igor's=20
            code archive </FONT></TD></TR></TBODY></TABLE><!-- The body =
table -->
      <TABLE cellSpacing=3D0 cellPadding=3D0 width=3D640 border=3D0>
        <TBODY>
        <TR>
          <TD width=3D1 bgColor=3D#001b36></TD>
          <TD width=3D3 bgColor=3D#ffffff></TD>
          <TD bgColor=3D#ffffff>
            <H3>Licence</H3>
            <P>The code in this archive is provided free of charge to be =
used by=20
            anyone for any reason whatsoever without any obligations. =
You can=20
            download, copy, modify and redistribute this code at your =
will. </P>
            <P>If you find the code useful, I would love to hear from =
you=20
            (igor[at]cs(dot)ubc{dot}ca). </P>
            <P>Igor Naverniouk =A9 2002-2004 </P>
            <H3>Disclaimer</H3>
            <P>The code in this archive is provided without any =
warranty,=20
            explicit or implied. It is not guaranteed to be correct, =
bug-free or=20
            fit for any purpose. The author will not be held liable for =
any=20
            damage done by executing the code or for any illegal =
activities=20
            conducted with the help of the code. </P>
            <P>If you find a bug, I would love to hear from you. </P>
            <H3>Contents</H3>
            <CENTER>
            <TABLE cellSpacing=3D0 cellPadding=3D0 width=3D"95%" =
border=3D0>
              <TBODY>
              <TR height=3D1>
                <TD bgColor=3D#001b36 colSpan=3D3></TD></TR>
              <TR>
                <TD width=3D1 bgColor=3D#001b36></TD>
                <TD>
                  <TABLE cellSpacing=3D0 cellPadding=3D0 width=3D"100%" =
border=3D0>
                    <SCRIPT language=3Djavascript>=0A=
    var i;=0A=
    for( i =3D 0; i < files.length; i++ )=0A=
    {=0A=
        if( i > 0 ) document.write( "<tr height=3D1><td =
bgcolor=3D#001B36 colspan=3D3></td></tr>\n" );=0A=
        document.write( "<tr><td colspan=3D3 bgcolor=3D#CCFFCC><a =
href=3D\"" + files[i] + "\">" + files[i] + "</a>:"=0A=
            + " " + descr[i] + "</td></tr>\n" );=0A=
            =0A=
        var j;=0A=
        for( j =3D 0; j < funcs[i].length; j++ )=0A=
        {=0A=
            var col =3D ( j % 2 ) ? "#DDDDDD" : "#EEEEEE";=0A=
            document.write( "<tr><td width=3D30 bgcolor=3D" + col + =
">&nbsp;</td>\n" );=0A=
            document.write( "<td bgcolor=3D" + col + ">" + funcs[i][j] + =
"</td>\n" );=0A=
            document.write( "<td bgcolor=3D" + col + ">" + =
funcDescr[i][j] + "</td>\n</tr>\n" );=0A=
        }=0A=
    }=0A=
</SCRIPT>

                    <TBODY></TBODY></TABLE></TD>
                <TD width=3D1 bgColor=3D#001b36></TD>
              <TR height=3D1>
                <TD bgColor=3D#001b36 =
colSpan=3D3></TD></TR></TBODY></TABLE></CENTER>
            <HR SIZE=3D1>

            <DIV align=3Dright><SMALL>Igor Naverniouk =A9 =
2000-2004</SMALL></DIV><!-- End of the body table --></TD>
          <TD width=3D1 bgColor=3D#001b36></TD></TR></TBODY></TABLE><!-- =
Bottom black line -->
      <TABLE cellSpacing=3D0 cellPadding=3D0 width=3D640 =
bgColor=3D#001b36 border=3D0>
        <TBODY>
        <TR height=3D1>
          <TD=20
bgColor=3D#001b36></TD></TR></TBODY></TABLE></TD></TR></TBODY></TABLE></C=
ENTER></BODY></HTML>
